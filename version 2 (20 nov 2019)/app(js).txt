var express       = require("express");
var app           = express();
var mongoose     = require("mongoose");
var bodyParser    = require("body-parser");
var User          = require("./models/user");
var LocalStrategy = require("passport-local");
var passport      = require("passport");
// var Subject       = require("./models/subject");
var Timetable     =require("./models/timetable");
app.set("view engine", "ejs");
// var queries = require("./public/dom/queries");

mongoose.connect("mongodb://localhost/yelp_camp_v6");
app.use(bodyParser.urlencoded({extended: true}));
app.use(express.static(__dirname + "/public"));
//passport configuration
   app.use(require("express-session")({
      secret: "Attendance Management",
      resave: false,
      saveUninitialized: false
   }));
   app.use(passport.initialize());
   app.use(passport.session());
   passport.use(new LocalStrategy(User.authenticate()));
   passport.serializeUser(User.serializeUser());
   passport.deserializeUser(User.deserializeUser());
   
//current user info.
app.use(function(req, res, next){
   res.locals.currentUser = req.user;
   next();
});

// app.use(queriesroutes);

//  ===========
// AUTH ROUTES
//  ===========

// show register form
app.get("/register", function(req, res){
   res.render("register"); 
});
//sign up logic
//copying the data to database from the input_form
app.post("/register", function(req, res){
    var newUser = new User({username: req.body.username, noOfSubjects:req.body.noofsubjects, noOfLabs:req.body.nooflabs});
    User.register(newUser, req.body.password, function(err, user){
        if(err){
            console.log("*******there is already a user*******");
            return res.render("register");
        }
        passport.authenticate("local")(req, res, function(){
          res.redirect("/home"); 
        });
    });
});
//copying the data from landing to the database
app.post("/landing",isLoggedIn,function(req,res){
    // User.findById(req.params.id,function(err,user){
    //         if(err)
    //         {
    //             console.log("error at line 71");
    //             console.log(err);
    //         }
    //         else
    //         {
                //     Subject.create({
                //         name:req.body.subj ,
                //         // author:{    type:req.user._id    }
                //     },function(err,subject){
                //     if(err)
                //     {
                //         console.log("error at line 80");
                //         console.log(err);
                //     }
                //     else
                //     {       
                //             // sb.author.id = req.user._id;
                //             // Subject.author.user1 = req.user.username;
                //             subject.save();
                //             console.log("1 subject added");
                //     }
                // });
                
        //     }
        // });
    res.redirect("/home");
});
//show landing page
// app.get("/landing", function(req,res){
//     res.render("landing");
// });

//showing login page
app.get("/",function(req,res){
   res.render("login"); 
});
//handling login logic
app.post("/",passport.authenticate("local",
    {
        successRedirect:"/home",
        failureRedirect:"/register"
    }),function(req,res){
});
//============================
// HOME PAGE ROUTES
//=============================
//home page
app.get("/home",function(req,res){
    console.log("home page");
           res.render("home");
       });
var week=[
        {  mon:[]   },
        {  tue: []  },
        {  wed:[]   },
        {  thu: []  },
        {  fri: []  },
        {  sat:[]   }
        ];
    var s1,s2,s3,s4,s5;
    var ns1=1,ns2=1,ns3=1,ns4=1,ns5=1;
app.post("/home",function(req,res){
    
    for(var i=0;i<6;i++)
    {
        for(var j=0;j<6;j++)
        {
            if(i===0)
                week[i].mon[j]=req.body.mon[j].trim();
            else if(i===1)
                week[i].tue[j]=req.body.tue[j].trim();
            else if(i===2)
                week[i].wed[j]=req.body.wed[j].trim();
            else if(i===3)
                week[i].thu[j]=req.body.thu[j].trim();
            else if(i===4)
                week[i].fri[j]=req.body.fri[j].trim();
            else if(i===5)
                week[i].sat[j]=req.body.sat[j].trim();
        }
    }
    addtoweek();
   res.redirect("/home1"); 
});
app.get("/home1",function(req,res){
    // console.log("E");
    // queries();
    res.render("home1",{week:week,s1:s1,s2:s2,s3:s3,s4:s4,s5:s5});
});

// Logout Route
app.get("/logout",function(req, res) {
   req.logout();
   res.redirect("/");
});

//=================================
//middle ware
//================================
function isLoggedIn(req, res, next){
    if(req.isAuthenticated()){
        return next();
    }
    res.redirect("/login");
}

function addtoweek(){
    s1=week[0].mon[0]; s2=week[1].tue[0]; s3=week[2].wed[0]; s4=week[3].thu[0]; s5=week[4].fri[0];
     for(var j=1;j<6;j++)
    {
            if(week[0].mon[j]===s1 || week[1].tue[j]===s1 || week[2].wed[j]===s1 || week[3].thu[j]===s1 || week[4].fri[j]===s1){
                ns1=ns1+1;
            }
    }
    for(var j=1;j<=6;j++)
    {
            if(week[0].mon[j]===s2 || week[1].tue[j]===s2 || week[2].wed[j]===s2 || week[3].thu[j]===s2 || week[4].fri[j]===s2){
                ns2=ns2+1;
            }
    }
     for(var j=1;j<=6;j++)
    {
            if(week[0].mon[j]===s3 || week[1].tue[j]===s3 || week[2].wed[j]===s3 || week[3].thu[j]===s3 || week[4].fri[j]===s3){
                ns3=ns3+1;
            }
    }
         for(var j=1;j<=6;j++)
    {
            if(week[0].mon[j]===s4 || week[1].tue[j]===s4 || week[2].wed[j]===s4 || week[3].thu[j]===s4 || week[4].fri[j]===s4){
                ns4=ns4+1;
            }
    }
         for(var j=1;j<=6;j++)
    {
            if(week[0].mon[j]===s5 || week[1].tue[j]===s5 || week[2].wed[j]===s5 || week[3].thu[j]===s5 || week[4].fri[j]===s5){
                ns5=ns5+1;
            }
    }
    for(var i=0;i<6;i++){
        if(week[5].sat[i]===s1){ns1=ns1+1;    }
        else if(week[5].sat[i]===s2){  ns2=ns2+1; }
        else if(week[5].sat[i]===s3){  ns3=ns3+1; }
        else if(week[5].sat[i]===s4){  ns4=ns4+1; }
        else if(week[5].sat[i]===s5){  ns5=ns5+1; }
    }
    Timetable.create(
        {
            subject1:{name:s1, hrs:ns1 },
            subject2:{name :s2,hrs:ns2},
            subject3:{name :s3,hrs:ns3},
            subject4:{name :s4,hrs:ns4},
            subject5:{name :s5,hrs:ns5}
        }
        ,function(err,tt)
        {
        if(err){
            console.log(err);
        }
        else
        {
            // sub1=tt.subject1.name;
            // console.log(sub1);
            
            console.log("timetable added");
            tt.save();
            ns1=ns2=ns3=ns4=ns5=0;
        }
    });

}

app.listen(process.env.PORT, process.env.IP, function(){
   console.log("The server has started");
});